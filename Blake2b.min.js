/*
Blake2b-JS v1.0.1
https://github.com/Rabbit-Company/Blake2b-JS
License: MIT
*/
class Blake2b{v=new Uint32Array(32);m=new Uint32Array(32);BLAKE2B_IV32=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]);SIGMA8=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3];parameterBlock=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);SIGMA82=new Uint8Array(this.SIGMA8.map(function(t){return 2*t}));ADD64AA(t,_,$){let e=t[_]+t[$],i=t[_+1]+t[$+1];e>=4294967296&&i++,t[_]=e,t[_+1]=i}ADD64AC(t,_,$,e){let i=t[_]+$;$<0&&(i+=4294967296);let h=t[_+1]+e;i>=4294967296&&h++,t[_]=i,t[_+1]=h}B2B_GET32(t,_){return t[_]^t[_+1]<<8^t[_+2]<<16^t[_+3]<<24}B2B_G(t,_,$,e,i,h){let s=this.m[i],l=this.m[i+1],r=this.m[h],a=this.m[h+1];this.ADD64AA(this.v,t,_),this.ADD64AC(this.v,t,s,l);let n=this.v[e]^this.v[t],A=this.v[e+1]^this.v[t+1];this.v[e]=A,this.v[e+1]=n,this.ADD64AA(this.v,$,e),n=this.v[_]^this.v[$],A=this.v[_+1]^this.v[$+1],this.v[_]=n>>>24^A<<8,this.v[_+1]=A>>>24^n<<8,this.ADD64AA(this.v,t,_),this.ADD64AC(this.v,t,r,a),n=this.v[e]^this.v[t],A=this.v[e+1]^this.v[t+1],this.v[e]=n>>>16^A<<16,this.v[e+1]=A>>>16^n<<16,this.ADD64AA(this.v,$,e),n=this.v[_]^this.v[$],A=this.v[_+1]^this.v[$+1],this.v[_]=A>>>31^n<<1,this.v[_+1]=n>>>31^A<<1}blake2bCompress(t,_){let $=0;for($=0;$<16;$++)this.v[$]=t.h[$],this.v[$+16]=this.BLAKE2B_IV32[$];for(this.v[24]=this.v[24]^t.t,this.v[25]=this.v[25]^t.t/4294967296,_&&(this.v[28]=~this.v[28],this.v[29]=~this.v[29]),$=0;$<32;$++)this.m[$]=this.B2B_GET32(t.b,4*$);for($=0;$<12;$++)this.B2B_G(0,8,16,24,this.SIGMA82[16*$+0],this.SIGMA82[16*$+1]),this.B2B_G(2,10,18,26,this.SIGMA82[16*$+2],this.SIGMA82[16*$+3]),this.B2B_G(4,12,20,28,this.SIGMA82[16*$+4],this.SIGMA82[16*$+5]),this.B2B_G(6,14,22,30,this.SIGMA82[16*$+6],this.SIGMA82[16*$+7]),this.B2B_G(0,10,20,30,this.SIGMA82[16*$+8],this.SIGMA82[16*$+9]),this.B2B_G(2,12,22,24,this.SIGMA82[16*$+10],this.SIGMA82[16*$+11]),this.B2B_G(4,14,16,26,this.SIGMA82[16*$+12],this.SIGMA82[16*$+13]),this.B2B_G(6,8,18,28,this.SIGMA82[16*$+14],this.SIGMA82[16*$+15]);for($=0;$<16;$++)t.h[$]=t.h[$]^this.v[$]^this.v[$+16]}blake2bInit(t,_,$,e){if(0===t||t>64)throw Error("Illegal output length, expected 0 < length <= 64");if(_&&_.length>64)throw Error("Illegal key, expected Uint8Array with 0 < length <= 64");if($&&16!==$.length)throw Error("Illegal salt, expected Uint8Array with length is 16");if(e&&16!==e.length)throw Error("Illegal personal, expected Uint8Array with length is 16");let i={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:t};this.parameterBlock.fill(0),this.parameterBlock[0]=t,_&&(this.parameterBlock[1]=_.length),this.parameterBlock[2]=1,this.parameterBlock[3]=1,$&&this.parameterBlock.set($,32),e&&this.parameterBlock.set(e,48);for(let h=0;h<16;h++)i.h[h]=this.BLAKE2B_IV32[h]^this.B2B_GET32(this.parameterBlock,4*h);return _&&(this.blake2bUpdate(i,_),i.c=128),i}blake2bUpdate(t,_){for(let $=0;$<_.length;$++)128===t.c&&(t.t+=t.c,this.blake2bCompress(t,!1),t.c=0),t.b[t.c++]=_[$]}blake2bFinal(t){for(t.t+=t.c;t.c<128;)t.b[t.c++]=0;this.blake2bCompress(t,!0);let _=new Uint8Array(t.outlen);for(let $=0;$<t.outlen;$++)_[$]=t.h[$>>2]>>8*(3&$);return _}blake2bStart(t,_,$,e,i){$=$||64,t=this.normalizeInput(t),e&&(e=this.normalizeInput(e)),i&&(i=this.normalizeInput(i));let h=this.blake2bInit($,_,e,i);return this.blake2bUpdate(h,t),this.blake2bFinal(h)}blake2bHex(t,_,$,e,i){let h=blake2bStart(t,_,$,e,i);return toHex(h)}normalizeInput(t){let _;if(t instanceof Uint8Array)_=t;else if("string"==typeof t){let $=new TextEncoder;_=$.encode(t)}else throw Error("Input must be an string, Buffer or Uint8Array");return _}toHex(t){return Array.prototype.map.call(t,function(t){return(t<16?"0":"")+t.toString(16)}).join("")}static hash(t,_,$=64,e,i){let h=new Blake2b,s=h.blake2bStart(t,_,$,e,i);return h.toHex(s)}}