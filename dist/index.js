class F{v=new Uint32Array(32);m=new Uint32Array(32);BLAKE2B_IV32=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]);SIGMA8=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3];parameterBlock=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);SIGMA82=new Uint8Array(this.SIGMA8.map(function(U){return U*2}));ADD64AA(U,w,D){const A=U[w]+U[D];let G=U[w+1]+U[D+1];if(A>=4294967296)G++;U[w]=A,U[w+1]=G}ADD64AC(U,w,D,A){let G=U[w]+D;if(D<0)G+=4294967296;let V=U[w+1]+A;if(G>=4294967296)V++;U[w]=G,U[w+1]=V}B2B_GET32(U,w){return U[w]^U[w+1]<<8^U[w+2]<<16^U[w+3]<<24}B2B_G(U,w,D,A,G,V){const C=this.m[G],J=this.m[G+1],_=this.m[V],X=this.m[V+1];this.ADD64AA(this.v,U,w),this.ADD64AC(this.v,U,C,J);let q=this.v[A]^this.v[U],z=this.v[A+1]^this.v[U+1];this.v[A]=z,this.v[A+1]=q,this.ADD64AA(this.v,D,A),q=this.v[w]^this.v[D],z=this.v[w+1]^this.v[D+1],this.v[w]=q>>>24^z<<8,this.v[w+1]=z>>>24^q<<8,this.ADD64AA(this.v,U,w),this.ADD64AC(this.v,U,_,X),q=this.v[A]^this.v[U],z=this.v[A+1]^this.v[U+1],this.v[A]=q>>>16^z<<16,this.v[A+1]=z>>>16^q<<16,this.ADD64AA(this.v,D,A),q=this.v[w]^this.v[D],z=this.v[w+1]^this.v[D+1],this.v[w]=z>>>31^q<<1,this.v[w+1]=q>>>31^z<<1}blake2bCompress(U,w){let D=0;for(D=0;D<16;D++)this.v[D]=U.h[D],this.v[D+16]=this.BLAKE2B_IV32[D];if(this.v[24]=this.v[24]^U.t,this.v[25]=this.v[25]^U.t/4294967296,w)this.v[28]=~this.v[28],this.v[29]=~this.v[29];for(D=0;D<32;D++)this.m[D]=this.B2B_GET32(U.b,4*D);for(D=0;D<12;D++)this.B2B_G(0,8,16,24,this.SIGMA82[D*16+0],this.SIGMA82[D*16+1]),this.B2B_G(2,10,18,26,this.SIGMA82[D*16+2],this.SIGMA82[D*16+3]),this.B2B_G(4,12,20,28,this.SIGMA82[D*16+4],this.SIGMA82[D*16+5]),this.B2B_G(6,14,22,30,this.SIGMA82[D*16+6],this.SIGMA82[D*16+7]),this.B2B_G(0,10,20,30,this.SIGMA82[D*16+8],this.SIGMA82[D*16+9]),this.B2B_G(2,12,22,24,this.SIGMA82[D*16+10],this.SIGMA82[D*16+11]),this.B2B_G(4,14,16,26,this.SIGMA82[D*16+12],this.SIGMA82[D*16+13]),this.B2B_G(6,8,18,28,this.SIGMA82[D*16+14],this.SIGMA82[D*16+15]);for(D=0;D<16;D++)U.h[D]=U.h[D]^this.v[D]^this.v[D+16]}blake2bInit(U,w,D,A){if(U===0||U>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(w&&w.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(D&&D.length!==16)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(A&&A.length!==16)throw new Error("Illegal personal, expected Uint8Array with length is 16");const G={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:U};if(this.parameterBlock.fill(0),this.parameterBlock[0]=U,w)this.parameterBlock[1]=w.length;if(this.parameterBlock[2]=1,this.parameterBlock[3]=1,D)this.parameterBlock.set(D,32);if(A)this.parameterBlock.set(A,48);for(let V=0;V<16;V++)G.h[V]=this.BLAKE2B_IV32[V]^this.B2B_GET32(this.parameterBlock,V*4);if(w)this.blake2bUpdate(G,w),G.c=128;return G}blake2bUpdate(U,w){for(let D=0;D<w.length;D++){if(U.c===128)U.t+=U.c,this.blake2bCompress(U,!1),U.c=0;U.b[U.c++]=w[D]}}blake2bFinal(U){U.t+=U.c;while(U.c<128)U.b[U.c++]=0;this.blake2bCompress(U,!0);const w=new Uint8Array(U.outlen);for(let D=0;D<U.outlen;D++)w[D]=U.h[D>>2]>>8*(D&3);return w}blake2bStart(U,w,D,A,G){D=D||64;const V=this.blake2bInit(D,w,this.normalizeInput(A),this.normalizeInput(G));return this.blake2bUpdate(V,this.normalizeInput(U)),this.blake2bFinal(V)}normalizeInput(U){let w;if(U instanceof Uint8Array)w=U;else if(typeof U==="string")w=(new TextEncoder()).encode(U);else throw new Error("Input must be an string, Buffer or Uint8Array");return w}toHex(U){return Array.prototype.map.call(U,function(w){return(w<16?"0":"")+w.toString(16)}).join("")}static hash(U="",w,D=64,A=new Uint8Array(16),G=new Uint8Array(16)){if(w?.length===0)w=void 0;if(typeof w==="string")w=(new TextEncoder()).encode(w);let V=new F;const C=V.blake2bStart(U,w,D,A,G);return V.toHex(C)}}var W=function(){let U=Q?.value,w=S?.value;if(N)N.innerHTML="<b>Hash:</b> "+F.hash(U,w)},O=function(U){return Math.floor(Math.random()*U)},L=function(U){return Date.now()-U},N=document.getElementById("hash"),Q=document.getElementById("message"),S=document.getElementById("secretKey"),Y=document.getElementById("amount");if(N)N.innerHTML="<b>Hash:</b> "+F.hash("","");Q.addEventListener("input",()=>{W()});S.addEventListener("input",()=>{W()});document.getElementById("btn-start")?.addEventListener("click",()=>{const U=document.getElementById("perf");if(!U)return;let w=parseInt(Y?.value,10);if(w<1)w=1;if(w>1e5)w=1e5;let D=[],A=[],G="test123",V=Date.now();U.innerText="1. Performance test has started.\n";let C=Date.now();for(let _=0;_<w;_++)D[_]=btoa(""+O(1e5)+Date.now()+O(1e5));U.innerText+="2. "+w+" random messages generated in "+L(C)+" milliseconds.\n",C=Date.now();for(let _=0;_<w;_++)A[_]=F.hash(D[_],G);U.innerText+="3. "+w+" random messages hashed in "+L(C)+" milliseconds.\n",C=Date.now();let J=0;for(let _=0;_<w;_++)if(A[_]===F.hash(D[_],G))J++;U.innerText+="4. "+J+" random messages validated successfully in "+L(C)+" milliseconds.\n",U.innerText+="5. Performance test has completed in "+L(V)+" milliseconds.\n"});
